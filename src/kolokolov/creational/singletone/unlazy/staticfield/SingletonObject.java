package kolokolov.creational.singletone.unlazy.staticfield;

/**
 * Реализация паттерна Singleton с инициализацией объекта в момент запуска приложения
 * основанный на статическом финализированном поле класса.
 * Экземпляр класса будет создан даже в том случае, если он ни разу не потребуется в программе
 * <p>
 * Плюсы:
 * + Простой
 * + Потокобезопасный
 * <p>
 * Минусы:
 * - Создает объект, даже когда он не требуется (отсутствует линивая(отложенная) инициализация)
 */
public class SingletonObject {
    private static final SingletonObject INSTANCE = new SingletonObject();

    /**
     * Приватный конструктор, чтобы нельзя было создать объект с помощью оператора new,
     * так как оператор new всегда возвращает НОВЫЙ объект.
     */
    private SingletonObject() {
    }

    /**
     * Просто отдаем инстанс класса без дополнительных проверок или блокировок,
     * так как инстанс класса уже создан в момент инициализации статического блока
     *
     * @return один и тот же экземпляр класса {@link SingletonObject}
     */
    public static SingletonObject getInstance() {
        return INSTANCE;
    }
}
